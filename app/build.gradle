plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
}



tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn['connectedDevelopDebugAndroidTest', 'createDebugCoverageReport']
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${project.layout.buildDirectory}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "${project.layout.buildDirectory}", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

android {
    namespace 'com.afrimax.paysimati'
    compileSdk 35

    defaultConfig {
        applicationId 'com.afrimax.paysimati'
        minSdk 26
        targetSdk 34
        versionCode 20
        versionName "1.0"
        testApplicationId 'com.afrimax.paysimati'
        testInstrumentationRunner 'com.afrimax.paysimati.TestJunitRunner'
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"

        flavorDimensions = ['env']
        productFlavors {
            develop {
                dimension "env"
                applicationIdSuffix ".develop"
                buildConfigField("String", "STAGE", "\"dev\"")
                buildConfigField("String", "BASE_URL", "\"https://${env.DOMAIN_NAME.value}/v1/\"")
                buildConfigField("String", "CUSTOMER_COGNITO_IDENTITY_POOL_ID", "\"${env.CUSTOMER_COGNITO_IDENTITY_POOL_ID.value}\"")
                buildConfigField("String", "REGION", "\"eu-west-1\"")
                buildConfigField("String", "CUSTOMER_COGNITO_USERPOOL_ID", "\"${env.CUSTOMER_COGNITO_USERPOOL_ID.value}\"")
                buildConfigField("String", "CUSTOMER_COGNITO_CLIENT_ID", "\"${env.CUSTOMER_COGNITO_CLIENT_ID.value}\"")
                buildConfigField("String", "CUSTOMER_S3_BUCKET_NAME", "\"${env.BUCKET_NAME.value}\"")
                buildConfigField("String", "PLACES_API_KEY", "\"${env.PLACES_API_KEY.value}\"")
                buildConfigField("String", "CDN_BASE_URL", "\"https://${env.CDN_URL.value}/\"")
                buildConfigField("String", "PASSWORD_SECRET_KEY", "\"${env.PASSWORD_SECRET_KEY.value}\"")
                buildConfigField("String", "SITE_KEY", "\"${env.RECAPTCHA_SITE_KEY_CUSTOMER_ANDROID.value}\"")
                buildConfigField("String", "FIREBASE_PROJECT_ID", "\"${env.FIREBASE_PROJECT_ID.value}\"")
                buildConfigField("String", "FIREBASE_APP_ID", "\"${env.CUSTOMER_FIREBASE_APP_ID.value}\"")
                buildConfigField("String", "FIREBASE_API_KEY", "\"${env.FIREBASE_API_KEY.value}\"")
                buildConfigField("String", "FIREBASE_STORAGE_BUCKET", "\"${env.FIREBASE_STORAGE_BUCKET.value}\"")
                buildConfigField("String", "MERCHANT_CHAT_WEBSOCKET", "\"${env.MERCHANT_CHAT_WEBSOCKET.value}\"")
            }

            // Repeat for qa, preprod, production...
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }

        kotlinOptions {
            jvmTarget = '11'
        }
    }

    dependencies {
        implementation libs.androidx.core.ktx
        implementation libs.androidx.appcompat
        implementation libs.material
        implementation libs.androidx.activity
        implementation libs.androidx.constraintlayout
        implementation libs.androidx.lifecycle.livedata.ktx
        implementation libs.androidx.fragment.ktx
        implementation libs.firebase.messaging
        implementation libs.androidx.lifecycle.process
        implementation libs.qr.scanner
        implementation libs.androidx.material3.android
        implementation libs.androidx.navigation.fragment.ktx
        implementation libs.androidx.navigation.ui.ktx
        implementation libs.androidx.media3.common.ktx
        implementation libs.androidx.espresso.intents
        testImplementation libs.junit
        androidTestImplementation libs.androidx.junit
        androidTestImplementation libs.androidx.espresso.core

        androidTestImplementation(libs.cucumber.android)
        androidTestImplementation(libs.cucumber.picocontainer)
        implementation libs.poi.ooxml
        implementation(libs.xmlbeans)
        androidTestImplementation libs.stax.api
        androidTestImplementation libs.aalto.xml
        implementation libs.androidx.espresso.idling.resource

        implementation libs.androidx.lifecycle.viewmodel.ktx
        implementation libs.androidx.fragment.ktx

        implementation libs.glide
        implementation libs.lottie
        implementation libs.lottie.compose

        implementation libs.retrofit
        implementation libs.converter.gson
        implementation libs.converter.scalars

        // âœ… Amplify Framework
        implementation 'com.amplifyframework:core:2.9.0'
        implementation 'com.amplifyframework:aws-auth-cognito:2.9.0'
        implementation 'com.amplifyframework:aws-storage-s3:2.9.0' // optional
        implementation 'com.amazonaws:aws-android-sdk-core:2.22.7'
        implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.22.7'

        implementation 'com.google.android.gms:play-services-auth:21.0.0'
        implementation libs.datafaker
        implementation libs.pinedittextfield
        implementation libs.kotlin.onetimepassword
        implementation libs.java.otp
        implementation libs.java.jwt
        implementation libs.places
        implementation libs.androidx.camera.camera2
        implementation libs.androidx.camera.view
        implementation libs.androidx.camera.lifecycle
        implementation libs.pdf.viewer
        implementation libs.zoomlayout
        androidTestImplementation libs.espresso.contrib
        implementation libs.blurry
        implementation libs.sdp.android
        implementation libs.androidx.exifinterface
        implementation libs.recaptcha

        implementation platform(libs.firebase.bom)
        implementation libs.firebase.crashlytics
        implementation libs.firebase.analytics
        implementation libs.app.update
        implementation libs.app.update.ktx

        implementation libs.orbit.core
        implementation libs.orbit.viewmodel

        implementation libs.hilt.android
        debugImplementation libs.androidx.ui.tooling
        kapt libs.hilt.compiler

        implementation libs.androidx.activity.compose
        implementation libs.androidx.ui
        implementation libs.androidx.ui.tooling.preview
        implementation libs.androidx.material
        implementation libs.androidx.paging.compose
    }

    kapt {
        correctErrorTypes true
    }
}